@Test 
     public void testDoubleArray905() { 
         double[] array = new double[] {1.0, 2.9876, -3.00001, 4.3}; 
         assertEquals(baseStr + "[{1.0,2.9876,-3.00001,4.3}]", new ToStringBuilder(base).append(array).toString()); 
         assertEquals(baseStr + "[{1.0,2.9876,-3.00001,4.3}]", new ToStringBuilder(base).append((Object) array).toString()); 
         array = null; 
         assertEquals(baseStr + "[<null>]", new ToStringBuilder(base).append(array).toString()); 
         assertEquals(baseStr + "[<null>]", new ToStringBuilder(base).append((Object) array).toString()); 
     } 
  

@Test 
     public void testDoubleArray906() { 
         double[] array = new double[] {1.0, 2.9876, -3.00001, 4.3}; 
         assertEquals(baseStr + "[{1.0,2.9876,-3.00001,4.3}]", new ToStringBuilder(base).append(array).toString()); 
         assertEquals(baseStr + "[{1.0,2.9876,-3.00001,4.3}]", new ToStringBuilder(base).append((Object) array).toString()); 
         array = null; 
         assertEquals(baseStr + "[<null>]", new ToStringBuilder(base).append(array).toString()); 
         assertEquals(baseStr + "[<null>]", new ToStringBuilder(base).append((Object) array).toString()); 
     } 
  

@Test 
     public void testDoubleArray907() { 
         double[] array = new double[] {1.0, 2.9876, -3.00001, 4.3}; 
         assertEquals(baseStr + "[{1.0,2.9876,-3.00001,4.3}]", new ToStringBuilder(base).append(array).toString()); 
         assertEquals(baseStr + "[{1.0,2.9876,-3.00001,4.3}]", new ToStringBuilder(base).append((Object) array).toString()); 
         array = null; 
         assertEquals(baseStr + "[<null>]", new ToStringBuilder(base).append(array).toString()); 
         assertEquals(baseStr + "[<null>]", new ToStringBuilder(base).append((Object) array).toString()); 
     } 
  

@Test 
     public void testReflectionDoubleArrayArray908() { 
         double[][] array = new double[][] { { 1.0, 2.29686 }, null, { Double.NaN } }; 
         final String baseStr = this.toBaseString(array); 
         assertEquals(baseStr + "[{{1.0,2.29686},<null>,{NaN}}]", ToStringBuilder.reflectionToString(array)); 
         array = null; 
         assertReflectionArray("<null>", array); 
     } 
  

@Test 
     public void testReflectionDoubleArrayArray909() { 
         double[][] array = new double[][] { { 1.0, 2.29686 }, null, { Double.NaN } }; 
         final String baseStr = this.toBaseString(array); 
         assertEquals(baseStr + "[{{1.0,2.29686},<null>,{NaN}}]", ToStringBuilder.reflectionToString(array)); 
         array = null; 
         assertReflectionArray("<null>", array); 
     } 
  

@Test 
     public void testReflectionDoubleArrayArray910() { 
         double[][] array = new double[][] { { 1.0, 2.29686 }, null, { Double.NaN } }; 
         final String baseStr = this.toBaseString(array); 
         assertEquals(baseStr + "[{{1.0,2.29686},<null>,{NaN}}]", ToStringBuilder.reflectionToString(array)); 
         array = null; 
         assertReflectionArray("<null>", array); 
     } 
  

@Test 
     public void testReflectionDoubleArrayArray911() { 
         double[][] array = new double[][] { { 1.0, 2.29686 }, null, { Double.NaN } }; 
         final String baseStr = this.toBaseString(array); 
         assertEquals(baseStr + "[{{1.0,2.29686},<null>,{NaN}}]", ToStringBuilder.reflectionToString(array)); 
         array = null; 
         assertReflectionArray("<null>", array); 
     } 
  

@Test 
     public void testReflectionDoubleArrayArray912() { 
         double[][] array = new double[][] { { 1.0, 2.29686 }, null, { Double.NaN } }; 
         final String baseStr = this.toBaseString(array); 
         assertEquals(baseStr + "[{{1.0,2.29686},<null>,{NaN}}]", ToStringBuilder.reflectionToString(array)); 
         array = null; 
         assertReflectionArray("<null>", array); 
     } 
  

@Test 
     public void testReflectionDoubleArrayArray913() { 
         double[][] array = new double[][] { { 1.0, 2.29686 }, null, { Double.NaN } }; 
         final String baseStr = this.toBaseString(array); 
         assertEquals(baseStr + "[{{1.0,2.29686},<null>,{NaN}}]", ToStringBuilder.reflectionToString(array)); 
         array = null; 
         assertReflectionArray("<null>", array); 
     } 
  

@Test 
     public void testReflectionDoubleArrayArray914() { 
         double[][] array = new double[][] { { 1.0, 2.29686 }, null, { Double.NaN } }; 
         final String baseStr = this.toBaseString(array); 
         assertEquals(baseStr + "[{{1.0,2.29686},<null>,{NaN}}]", ToStringBuilder.reflectionToString(array)); 
         array = null; 
         assertReflectionArray("<null>", array); 
     } 
  

@Test 
     public void testFloatArray915() { 
         float[] array = new float[] {1.0f, 2.9876f, -3.00001f, 4.3f}; 
         assertEquals(baseStr + "[{1.0,2.9876,-3.00001,4.3}]", new ToStringBuilder(base).append(array).toString()); 
         assertEquals(baseStr + "[{1.0,2.9876,-3.00001,4.3}]", new ToStringBuilder(base).append((Object) array).toString()); 
         array = null; 
         assertEquals(baseStr + "[<null>]", new ToStringBuilder(base).append(array).toString()); 
         assertEquals(baseStr + "[<null>]", new ToStringBuilder(base).append((Object) array).toString()); 
     } 
  

@Test 
     public void testFloatArray916() { 
         float[] array = new float[] {1.0f, 2.9876f, -3.00001f, 4.3f}; 
         assertEquals(baseStr + "[{1.0,2.9876,-3.00001,4.3}]", new ToStringBuilder(base).append(array).toString()); 
         assertEquals(baseStr + "[{1.0,2.9876,-3.00001,4.3}]", new ToStringBuilder(base).append((Object) array).toString()); 
         array = null; 
         assertEquals(baseStr + "[<null>]", new ToStringBuilder(base).append(array).toString()); 
         assertEquals(baseStr + "[<null>]", new ToStringBuilder(base).append((Object) array).toString()); 
     } 
  

@Test 
     public void testFloatArray917() { 
         float[] array = new float[] {1.0f, 2.9876f, -3.00001f, 4.3f}; 
         assertEquals(baseStr + "[{1.0,2.9876,-3.00001,4.3}]", new ToStringBuilder(base).append(array).toString()); 
         assertEquals(baseStr + "[{1.0,2.9876,-3.00001,4.3}]", new ToStringBuilder(base).append((Object) array).toString()); 
         array = null; 
         assertEquals(baseStr + "[<null>]", new ToStringBuilder(base).append(array).toString()); 
         assertEquals(baseStr + "[<null>]", new ToStringBuilder(base).append((Object) array).toString()); 
     } 
  

@Test 
     public void testFloatArray918() { 
         float[] array = new float[] {1.0f, 2.9876f, -3.00001f, 4.3f}; 
         assertEquals(baseStr + "[{1.0,2.9876,-3.00001,4.3}]", new ToStringBuilder(base).append(array).toString()); 
         assertEquals(baseStr + "[{1.0,2.9876,-3.00001,4.3}]", new ToStringBuilder(base).append((Object) array).toString()); 
         array = null; 
         assertEquals(baseStr + "[<null>]", new ToStringBuilder(base).append(array).toString()); 
         assertEquals(baseStr + "[<null>]", new ToStringBuilder(base).append((Object) array).toString()); 
     } 
  

