@Test 
     public void testExceptions585() { 
         final char[] DUMMY = new char[]{'a'}; // valid char array 
         try { 
             RandomStringUtils.random(-1); 
             fail(); 
         } catch (final IllegalArgumentException ex) {} 
         try { 
             RandomStringUtils.random(-1, true, true); 
             fail(); 
         } catch (final IllegalArgumentException ex) {} 
         try { 
             RandomStringUtils.random(-1, DUMMY); 
             fail(); 
         } catch (final IllegalArgumentException ex) {} 
         try { 
             RandomStringUtils.random(1, new char[0]); // must not provide empty array => IAE 
             fail(); 
         } catch (final IllegalArgumentException ex) {} 
         try { 
             RandomStringUtils.random(-1, ""); 
             fail(); 
         } catch (final IllegalArgumentException ex) {} 
         try { 
        
@Test 
     public void testRandomStringUtils586() { 
         String r1 = RandomStringUtils.random(50); 
         assertEquals("random(50) length", 50, r1.length()); 
         String r2 = RandomStringUtils.random(50); 
         assertEquals("random(50) length", 50, r2.length()); 
         assertTrue("!r1.equals(r2)", !r1.equals(r2)); 
          
         r1 = RandomStringUtils.randomAscii(50); 
         assertEquals("randomAscii(50) length", 50, r1.length()); 
         for(int i = 0; i < r1.length(); i++) { 
             assertTrue("char between 32 and 127", r1.charAt(i) >= 32 && r1.charAt(i) <= 127); 
         }         
         r2 = RandomStringUtils.randomAscii(50); 
         assertTrue("!r1.equals(r2)", !r1.equals(r2)); 
  
         r1 = RandomStringUtils.randomAlphabetic(50); 
         assertEquals("randomAlphabetic(50)", 50, r1.length()); 
         for(int i = 0; i < r1.length(); i++) { 
          
