@Test 
     public void testNoNullElementsArray243() { 
         String[] array = new String[] {"a", "b"}; 
         Validate.noNullElements(array, "MSG"); 
         try { 
             Validate.noNullElements((Object[]) null, "MSG"); 
             fail("Expecting NullPointerException"); 
         } catch (final NullPointerException ex) { 
             assertEquals("The validated object is null", ex.getMessage()); 
         } 
         array[1] = null; 
         try { 
             Validate.noNullElements(array, "MSG"); 
             fail("Expecting IllegalArgumentException"); 
         } catch (final IllegalArgumentException ex) { 
             assertEquals("MSG", ex.getMessage()); 
         } 
          
         array = new String[] {"a", "b"}; 
         final String[] test = Validate.noNullElements(array, "Message"); 
         assertSame(array, test); 
     } 
  
     //----------------------------------------------------------------------- 
     //----------------------------------------------------------------------- 

@Test 
     public void testNoNullElementsArray244() { 
         String[] array = new String[] {"a", "b"}; 
         Validate.noNullElements(array, "MSG"); 
         try { 
             Validate.noNullElements((Object[]) null, "MSG"); 
             fail("Expecting NullPointerException"); 
         } catch (final NullPointerException ex) { 
             assertEquals("The validated object is null", ex.getMessage()); 
         } 
         array[1] = null; 
         try { 
             Validate.noNullElements(array, "MSG"); 
             fail("Expecting IllegalArgumentException"); 
         } catch (final IllegalArgumentException ex) { 
             assertEquals("MSG", ex.getMessage()); 
         } 
          
         array = new String[] {"a", "b"}; 
         final String[] test = Validate.noNullElements(array, "Message"); 
         assertSame(array, test); 
     } 
  
     //----------------------------------------------------------------------- 
     //----------------------------------------------------------------------- 

@Test 
     public void testNoNullElementsArray245() { 
         String[] array = new String[] {"a", "b"}; 
         Validate.noNullElements(array, "MSG"); 
         try { 
             Validate.noNullElements((Object[]) null, "MSG"); 
             fail("Expecting NullPointerException"); 
         } catch (final NullPointerException ex) { 
             assertEquals("The validated object is null", ex.getMessage()); 
         } 
         array[1] = null; 
         try { 
             Validate.noNullElements(array, "MSG"); 
             fail("Expecting IllegalArgumentException"); 
         } catch (final IllegalArgumentException ex) { 
             assertEquals("MSG", ex.getMessage()); 
         } 
          
         array = new String[] {"a", "b"}; 
         final String[] test = Validate.noNullElements(array, "Message"); 
         assertSame(array, test); 
     } 
  
     //----------------------------------------------------------------------- 
     //----------------------------------------------------------------------- 

@Test 
     public void testNotEmptyArray146() { 
         Validate.notEmpty(new Object[] {null}); 
         try { 
             Validate.notEmpty((Object[]) null); 
             fail("Expecting NullPointerException"); 
         } catch (final NullPointerException ex) { 
             assertEquals("The validated array is empty", ex.getMessage()); 
         } 
         try { 
             Validate.notEmpty(new Object[0]); 
             fail("Expecting IllegalArgumentException"); 
         } catch (final IllegalArgumentException ex) { 
             assertEquals("The validated array is empty", ex.getMessage()); 
         } 
          
         final String[] array = new String[] {"hi"}; 
         final String[] test = Validate.notEmpty(array); 
         assertSame(array, test); 
     } 
  
     //----------------------------------------------------------------------- 

@Test 
     public void testNotEmptyArray147() { 
         Validate.notEmpty(new Object[] {null}); 
         try { 
             Validate.notEmpty((Object[]) null); 
             fail("Expecting NullPointerException"); 
         } catch (final NullPointerException ex) { 
             assertEquals("The validated array is empty", ex.getMessage()); 
         } 
         try { 
             Validate.notEmpty(new Object[0]); 
             fail("Expecting IllegalArgumentException"); 
         } catch (final IllegalArgumentException ex) { 
             assertEquals("The validated array is empty", ex.getMessage()); 
         } 
          
         final String[] array = new String[] {"hi"}; 
         final String[] test = Validate.notEmpty(array); 
         assertSame(array, test); 
     } 
  
     //----------------------------------------------------------------------- 

@Test 
     public void testNotEmptyArray148() { 
         Validate.notEmpty(new Object[] {null}); 
         try { 
             Validate.notEmpty((Object[]) null); 
             fail("Expecting NullPointerException"); 
         } catch (final NullPointerException ex) { 
             assertEquals("The validated array is empty", ex.getMessage()); 
         } 
         try { 
             Validate.notEmpty(new Object[0]); 
             fail("Expecting IllegalArgumentException"); 
         } catch (final IllegalArgumentException ex) { 
             assertEquals("The validated array is empty", ex.getMessage()); 
         } 
          
         final String[] array = new String[] {"hi"}; 
         final String[] test = Validate.notEmpty(array); 
         assertSame(array, test); 
     } 
  
     //----------------------------------------------------------------------- 

@Test 
     public void testNotEmptyArray149() { 
         Validate.notEmpty(new Object[] {null}); 
         try { 
             Validate.notEmpty((Object[]) null); 
             fail("Expecting NullPointerException"); 
         } catch (final NullPointerException ex) { 
             assertEquals("The validated array is empty", ex.getMessage()); 
         } 
         try { 
             Validate.notEmpty(new Object[0]); 
             fail("Expecting IllegalArgumentException"); 
         } catch (final IllegalArgumentException ex) { 
             assertEquals("The validated array is empty", ex.getMessage()); 
         } 
          
         final String[] array = new String[] {"hi"}; 
         final String[] test = Validate.notEmpty(array); 
         assertSame(array, test); 
     } 
  
     //----------------------------------------------------------------------- 

@Test 
     public void testNotEmptyArray150() { 
         Validate.notEmpty(new Object[] {null}); 
         try { 
             Validate.notEmpty((Object[]) null); 
             fail("Expecting NullPointerException"); 
         } catch (final NullPointerException ex) { 
             assertEquals("The validated array is empty", ex.getMessage()); 
         } 
         try { 
             Validate.notEmpty(new Object[0]); 
             fail("Expecting IllegalArgumentException"); 
         } catch (final IllegalArgumentException ex) { 
             assertEquals("The validated array is empty", ex.getMessage()); 
         } 
          
         final String[] array = new String[] {"hi"}; 
         final String[] test = Validate.notEmpty(array); 
         assertSame(array, test); 
     } 
  
     //----------------------------------------------------------------------- 

@Test 
     public void testNotEmptyArray151() { 
         Validate.notEmpty(new Object[] {null}); 
         try { 
             Validate.notEmpty((Object[]) null); 
             fail("Expecting NullPointerException"); 
         } catch (final NullPointerException ex) { 
             assertEquals("The validated array is empty", ex.getMessage()); 
         } 
         try { 
             Validate.notEmpty(new Object[0]); 
             fail("Expecting IllegalArgumentException"); 
         } catch (final IllegalArgumentException ex) { 
             assertEquals("The validated array is empty", ex.getMessage()); 
         } 
          
         final String[] array = new String[] {"hi"}; 
         final String[] test = Validate.notEmpty(array); 
         assertSame(array, test); 
     } 
  
     //----------------------------------------------------------------------- 

@Test 
     public void testNotEmptyArray152() { 
         Validate.notEmpty(new Object[] {null}); 
         try { 
             Validate.notEmpty((Object[]) null); 
             fail("Expecting NullPointerException"); 
         } catch (final NullPointerException ex) { 
             assertEquals("The validated array is empty", ex.getMessage()); 
         } 
         try { 
             Validate.notEmpty(new Object[0]); 
             fail("Expecting IllegalArgumentException"); 
         } catch (final IllegalArgumentException ex) { 
             assertEquals("The validated array is empty", ex.getMessage()); 
         } 
          
         final String[] array = new String[] {"hi"}; 
         final String[] test = Validate.notEmpty(array); 
         assertSame(array, test); 
     } 
  
     //----------------------------------------------------------------------- 

@Test 
     public void testNotEmptyArray153() { 
         Validate.notEmpty(new Object[] {null}); 
         try { 
             Validate.notEmpty((Object[]) null); 
             fail("Expecting NullPointerException"); 
         } catch (final NullPointerException ex) { 
             assertEquals("The validated array is empty", ex.getMessage()); 
         } 
         try { 
             Validate.notEmpty(new Object[0]); 
             fail("Expecting IllegalArgumentException"); 
         } catch (final IllegalArgumentException ex) { 
             assertEquals("The validated array is empty", ex.getMessage()); 
         } 
          
         final String[] array = new String[] {"hi"}; 
         final String[] test = Validate.notEmpty(array); 
         assertSame(array, test); 
     } 
  
     //----------------------------------------------------------------------- 

